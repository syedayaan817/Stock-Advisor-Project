import streamlit as st
from autogen_agent import query_autogen
from datetime import datetime

def main():
    st.set_page_config(page_title="AI Stock Market Advisor", page_icon="📊")
    st.title("📊 AI-Powered Stock Market Advisor 🚀")
    st.write("💬 Ask about stock trends by entering a query below.")

    user_input = st.text_input("🔹 Your query:", "Enter your stock query here...")

    if st.button("Analyze"):
        if user_input.strip():
            st.success("⏳ Processing your query...")
            print(f"Streamlit Received Query: {user_input}")
            
            # ✅ Get response from AutoGen
            stock_analysis = query_autogen(user_input)
            print(f"Stock analysis output: {stock_analysis}")

            if isinstance(stock_analysis, dict):
                # ✅ Display LLM output if entity extraction fails
                if "llm_response" in stock_analysis:
                    st.warning("⚠️ LLM was unable to extract stock details, but here’s what it understood:")
                    st.markdown(stock_analysis["llm_response"])

                # ✅ Stock Trend Analysis
                st.write("📈 **Stock Trend Analysis:**")
                st.markdown(stock_analysis.get("analysis", "⚠️ No stock analysis available."))

                # ✅ Display Stock Chart
                if stock_analysis.get("chart_path"):
                    st.image(stock_analysis["chart_path"], caption="📊 Stock Price Chart")
                else:
                    st.warning("⚠️ No stock chart available.")

                # ✅ Display Latest Stock News
                st.write("📰 Latest Stock News:")
                news_data = stock_analysis.get("news", ["No news available."])
                st.text("\n".join(news_data))

                st.write("----AI-Generated Insights---- \n")
                ai_data = stock_analysis.get("stock_insights",["No Insights Available"])
                st.text("\n".join(ai_data))
                # ✅ Generate Recommendations if Query is for Current Year
                current_year = str(datetime.today().year)
                if current_year in user_input:
                    st.write("💡 **Investment Insights (Generated by AI):**")
                    llm_insights = query_autogen(f"Provide investment insights for {user_input}")
                    st.markdown(llm_insights.get("analysis", "⚠️ No insights available."))

            else:
                st.error(stock_analysis)

if __name__ == "__main__":
    main()